psql/output/acs <- output/acs.py, psql/input/acs
    $INPUT && touch $OUTPUT

psql/output/tests <- output/tests.sql, psql/aux/kids, psql/aux/kid_ethnicity, psql/aux/tests_geocoded [method:psql]

psql/output/kid_addresses <- output/kid_addresses.sql, psql/aux/tests_geocoded, psql/aux/addresses, psql/aux/kids [method:psql]

psql/output/addresses <- output/addresses.sql, psql/aux/addresses, psql/aux/complex_addresses [method:psql]

; aggregate building characteristics to complex level
psql/output/buildings_aggregated <- output/buildings_aggregated.py, psql/output/addresses, psql/aux/buildings, psql/aux/complex_addresses, psql/aux/assessor_summary
    $INPUT && touch $OUTPUT

psql/output/inspections <- output/inspections.sql, psql/aux/addresses, psql/aux/inspections, psql/aux/inspection_addresses [method:psql]
psql/output/inspections_aggregated <- output/inspections_aggregated.py, data/output/inspections.pkl, data/output/addresses.pkl
    $INPUT $INPUT1 $INPUT2 && touch $OUTPUT

$(for y in {2007..2013}; do

echo "psql/output/tests_aggregated_"$y" <- output/tests_aggregated.py, data/output/tests.pkl, data/output/addresses.pkl"
echo "    \$INPUT \$INPUT1 \$INPUT2 "$y" && touch \$OUTPUT"

done)

$(for table in tests inspections addresses acs; do

echo "data/output/"$table".pkl <- psql/output/"$table" [method:pickle_table]"

done)

psql/output/wic <- output/wic.sql, psql/aux/wic_kids, psql/aux/wic [method:psql]
