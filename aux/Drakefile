; summarize assessor and buildings data per address (sources have multiple entries per address over time)
psql/aux/assessor <- aux/assessor.sql [method:psql]

; match inspections with addresses
psql/aux/inspections <- aux/inspections.sql, psql/input/inspections [method:psql]
psql/aux/inspection_addresses <- aux/inspection_addresses.sql, psql/input/inspections, psql/aux/addresses [method:psql]

; collect complete tests (not missing name, dob, or test date)
psql/aux/tests <- aux/tests.sql, psql/input/currbllshort, psql/input/m7 [method:psql]

; auxillary information about tests: test number, first and last test, first ebll, maximum bll
; also importantly drops tests with invalid dates (null kid date of birth or sample date < date of birth)
psql/aux/kid_tests_info <- aux/kid_tests_info.sql, psql/aux/kid_tests, psql/aux/kids [method:psql]

; generate canonical list of kids by taking mode of deduped kid clusters
psql/aux/mode <- aux/mode.sql [method:psql]
psql/aux/kids <- aux/kids.sql, psql/dedupe/infants, psql/dedupe/entity_map, psql/aux/mode [method:psql]

; initialize address table with Chicago addresses and geocoded addresses from currbllshort and buildings datasets
psql/aux/addresses <- aux/addresses.sql, psql/input/addresses, psql/buildings/addresses, psql/input/census_tracts, psql/input/wards, psql/input/currbllshort, psql/input/m7, psql/cornerstone/addresses [method:psql]

; match tests to addresses
psql/aux/test_addresses <- aux/test_addresses.sql, psql/aux/tests, psql/aux/addresses [method:psql]

psql/aux/kid_mothers <- aux/kid_mothers.sql, psql/aux/kid_wics [method:psql]

psql/aux/kid_wic_addresses <- aux/kid_wic_addresses.sql, psql/aux/kid_wics [method:psql]

; calculate kid ethnicity based on last name and address
psql/aux/kid_ethnicity <- aux/kid_ethnicity.sql, psql/input/surnames, psql/aux/tests, psql/output/acs [method:psql]

; generate a mapping of addresses to buildings and complexes
psql/aux/complex_addresses <- aux/complex_addresses.sql, psql/buildings/complex_buildings, psql/buildings/building_addresses, psql/buildings/addresses, psql/aux/addresses [method:psql]

; building level aggregation of footprint data
psql/aux/buildings <- aux/buildings.py, psql/input/buildings, psql/buildings/building_components
    python $INPUT && touch $OUTPUT

; binarize building permit type
psql/aux/building_permits <- aux/building_permits.py, psql/input/building_permits
    $INPUT && touch $OUTPUT

; binarize and aggregate wic program data
psql/aux/wic_kids <- aux/wic.py, psql/wic/wic_kids
    $INPUT && touch $OUTPUT
