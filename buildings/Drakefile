; create schema
psql/buildings <- [-timecheck]
    psql -c "create schema if not exists buildings" && mkdir -p psql/buildings

; extract buildings and generate orig_bldg_ when it is zero in input
psql/buildings/original_buildings <- buildings/original_buildings.sql, psql/input/buildings [method:psql]

; extract all addresses from buildings address ranges
psql/buildings/original_addresses <- buildings/original_addresses.sql, psql/buildings/original_buildings [method:psql]

; get unique representative for each address
psql/buildings/addresses <- buildings/addresses.sql, psql/buildings/original_addresses [method:psql]

; deduplicate buildings
psql/buildings/building_components <- buildings/building_components.py, psql/buildings/original_buildings
    $INPUT && touch $OUTPUT

; associate addresses with deduplicated buildings
psql/buildings/building_addresses <- buildings/building_addresses.sql, psql/buildings/building_components [method:psql]

; collect unique buildings
psql/buildings/buildings <- buildings/buildings.sql, psql/buildings/building_addresses [method:psql]

; deduplicate building complexes
psql/buildings/complex_components <- buildings/complex_components.py, psql/buildings/building_components
    $INPUT && touch $OUTPUT

; associate addresses with deduplicated buildings
psql/buildings/complex_buildings <- buildings/complex_buildings.sql, psql/buildings/complex_components [method:psql]
