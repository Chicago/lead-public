psql/wic/ <- [method:psql_schema -timecheck]

; dump pdf to text
data/wic/pdftotext/ <- [-timecheck]
    mkdir -p $OUTPUT
    for filename in $WIC_DIR/*.pdf; do
        pdftotext -layout "$filename" $OUTPUT/$(basename "$filename" .pdf).txt
    done

; remove header and formatting lines from pdf output
data/wic/grep/ <- data/wic/pdftotext/
    mkdir -p $OUTPUT
    rm $OUTPUT/*.txt
    for filename in $INPUT/*.txt; do
        clinic=$(basename "$filename" .txt | sed 's/_I$//')
        grep -v $'\(^$\|Program\|report\|Request\|Pregnant\|Prenatal\|Infants\|Filter\|Records Selected\|GRAND TOTAL\|Printed\|^\f\)' "$filename" > $OUTPUT/$(basename "$filename")
    done

; convert to csv and add clinic column
data/wic/csv/ <- data/wic/grep/, wic/to_csv.sh, wic/to_csv.py
    $INPUT1 

; copy to database
psql/wic/wic_infant, psql/wic/wic_pregnant <- data/wic/csv/, wic/copy_wic.py
    psql -c "DROP TABLE IF EXISTS input.wic_infant; DROP TABLE IF EXISTS input.wic_pregnant;"
    # WestTown has all the fields so create table based on that by sorting in reverse order
    for filename in `ls -r $INPUT/*.csv`; do
        echo $filename
        $INPUT1 $filename
    done
    psql -c "ALTER TABLE wic.wic_infant ADD id SERIAL PRIMARY KEY; ALTER TABLE wic.wic_pregnant ADD id SERIAL PRIMARY KEY;"
    touch $OUTPUT0 $OUTPUT1

psql/wic/wic_addresses <- wic/wic_addresses.py
    python $INPUT $WIC_INFANTS_GEOCODED_FILE $WIC_PREGNANT_GEOCODED_FILE && touch $OUTPUT

psql/wic/wic_dedupe <- wic/wic_dedupe.sql, psql/wic/wic_infant, psql/aux/kid_tests, psql/aux/kid_components, psql/aux/kids_initial, psql/aux/tests [method:psql]

psql/wic/wic_components <- wic/wic_components.py, psql/wic/wic_dedupe
    python $INPUT && touch $OUTPUT

psql/wic/wic_kids <- wic/wic_kids.sql, psql/wic/wic_components [method:psql]
